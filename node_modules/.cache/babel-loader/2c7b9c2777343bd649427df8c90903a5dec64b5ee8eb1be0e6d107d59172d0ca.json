{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spidy\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Task from './Components/Task.jsx';\nimport TodoForm from './Components/TodoForm.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    if (tas) localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  function addTask(name) {\n    setTasks(prev => {\n      return [...prev, {\n        name: name,\n        done: false\n      }];\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      ...task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Task","TodoForm","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","tas","localStorage","setItem","JSON","stringify","addTask","name","prev","done","children","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_c","$RefreshReg$"],"sources":["C:/Users/spidy/todo-list/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Task from './Components/Task.jsx';\nimport TodoForm from './Components/TodoForm.jsx';\n\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);\n  useEffect( () =>{\n    \n   if(tas)    \n\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  },   [tasks]);\n\n  function addTask(name){\n    setTasks( prev => {\n      return [ ...prev, {name:name, done:false}];\n    });\n\n  }\n\n\n\n  return (\n  <main>\n   <TodoForm onAdd={addTask}/>\n   {tasks.map(task =>(\n    <Task {...task}/>\n   ))}\n</main>\n\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAE,MAAK;IAEf,IAAGU,GAAG,EAELC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC;EACtD,CAAC,EAAI,CAACA,KAAK,CAAC,CAAC;EAEb,SAASO,OAAOA,CAACC,IAAI,EAAC;IACpBP,QAAQ,CAAEQ,IAAI,IAAI;MAChB,OAAO,CAAE,GAAGA,IAAI,EAAE;QAACD,IAAI,EAACA,IAAI;QAAEE,IAAI,EAAC;MAAK,CAAC,CAAC;IAC5C,CAAC,CAAC;EAEJ;EAIA,oBACAb,OAAA;IAAAc,QAAA,gBACCd,OAAA,CAACF,QAAQ;MAACiB,KAAK,EAAEL;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAC1BhB,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACdrB,OAAA,CAACH,IAAI;MAAA,GAAKwB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAIP;AAACjB,EAAA,CA7BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}