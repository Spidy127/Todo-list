{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\spidy\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport TodoForm from './Components/TodoForm';\nimport Task from './Components/TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [sort, setSort] = useState('default');\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n  function addTask(name) {\n    setTasks(prev => {\n      return [...prev, {\n        name: name,\n        done: false\n      }];\n    });\n  }\n  function removeTask(indexToRemove) {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexToRemove);\n    });\n  }\n  function updateTaskDone(taskIndex, newDone) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[taskIndex].done = newDone;\n      return newTasks;\n    });\n  }\n  function renameTask(index, newName) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = newName;\n      return newTasks;\n    });\n  }\n  function handleFilterChange(e) {\n    setFilter(e.target.value);\n  }\n  function handleSortChange(e) {\n    setSort(e.target.value);\n  }\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.done;\n    if (filter === 'incomplete') return !task.done;\n    return true;\n  });\n  const sortedTasks = filteredTasks.sort((a, b) => {\n    if (sort === 'alphabetical') return a.name.localeCompare(b.name);\n    if (sort === 'reverse') return b.name.localeCompare(a.name);\n    return 0;\n  });\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n  function getMessage() {\n    const percentage = numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'Try to do at least one! 🙏';\n    }\n    if (percentage === 100) {\n      return 'Nice job for today! 🏝';\n    }\n    return 'Keep it going 💪🏻';\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [numberComplete, \"/\", numberTotal, \" Complete\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: getMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Filter:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filter,\n          onChange: handleFilterChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"incomplete\",\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sort,\n          onChange: handleSortChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Default\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alphabetical\",\n            children: \"Alphabetical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"reverse\",\n            children: \"Reverse Alphabetical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), sortedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      ...task,\n      onRename: newName => renameTask(index, newName),\n      onTrash: () => removeTask(index),\n      onToggle: done => updateTaskDone(index, done)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tMuM+6IWrO7RH1Oxej/5/hA5XN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TodoForm","Task","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","sort","setSort","length","localStorage","setItem","JSON","stringify","parse","getItem","addTask","name","prev","done","removeTask","indexToRemove","taskObject","index","updateTaskDone","taskIndex","newDone","newTasks","renameTask","newName","handleFilterChange","e","target","value","handleSortChange","filteredTasks","task","sortedTasks","a","b","localeCompare","numberComplete","t","numberTotal","getMessage","percentage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onAdd","map","onRename","onTrash","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/spidy/todo-list/src/App.js"],"sourcesContent":["import './App.css';\n\nimport { useEffect, useState } from \"react\";\nimport TodoForm from './Components/TodoForm';\nimport Task from './Components/TodoForm';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [sort, setSort] = useState('default');\n\n  useEffect(() => {\n    if (tasks.length === 0) return;\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    setTasks(tasks || []);\n  }, []);\n\n  function addTask(name) {\n    setTasks(prev => {\n      return [...prev, { name: name, done: false }];\n    });\n  }\n\n  function removeTask(indexToRemove) {\n    setTasks(prev => {\n      return prev.filter((taskObject, index) => index !== indexToRemove);\n    });\n  }\n\n  function updateTaskDone(taskIndex, newDone) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[taskIndex].done = newDone;\n      return newTasks;\n    });\n  }\n\n  function renameTask(index, newName) {\n    setTasks(prev => {\n      const newTasks = [...prev];\n      newTasks[index].name = newName;\n      return newTasks;\n    });\n  }\n\n  function handleFilterChange(e) {\n    setFilter(e.target.value);\n  }\n\n  function handleSortChange(e) {\n    setSort(e.target.value);\n  }\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.done;\n    if (filter === 'incomplete') return !task.done;\n    return true;\n  });\n\n  const sortedTasks = filteredTasks.sort((a, b) => {\n    if (sort === 'alphabetical') return a.name.localeCompare(b.name);\n    if (sort === 'reverse') return b.name.localeCompare(a.name);\n    return 0;\n  });\n\n  const numberComplete = tasks.filter(t => t.done).length;\n  const numberTotal = tasks.length;\n\n  function getMessage() {\n    const percentage = numberComplete / numberTotal * 100;\n    if (percentage === 0) {\n      return 'Try to do at least one! 🙏';\n    }\n    if (percentage === 100) {\n      return 'Nice job for today! 🏝';\n    }\n    return 'Keep it going 💪🏻';\n  }\n\n  return (\n    <main>\n      <h1>{numberComplete}/{numberTotal} Complete</h1>\n      <h2>{getMessage()}</h2>\n      <div className=\"controls\">\n        <label>\n          Filter:\n          <select value={filter} onChange={handleFilterChange}>\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"incomplete\">Incomplete</option>\n          </select>\n        </label>\n        <label>\n          Sort:\n          <select value={sort} onChange={handleSortChange}>\n            <option value=\"default\">Default</option>\n            <option value=\"alphabetical\">Alphabetical</option>\n            <option value=\"reverse\">Reverse Alphabetical</option>\n          </select>\n        </label>\n      </div>\n      <TodoForm onAdd={addTask} />\n      {sortedTasks.map((task, index) => (\n        <Task\n          key={index}\n          {...task}\n          onRename={newName => renameTask(index, newName)}\n          onTrash={() => removeTask(index)}\n          onToggle={done => updateTaskDone(index, done)}\n        />\n      ))}\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}